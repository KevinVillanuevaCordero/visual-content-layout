<?php

/**
 * @file
 * Prepare the respective element that module require.
 */

/**
 * Implements hook_page_attachments_alter().
 */
function visual_content_layout_page_attachments_alter(array &$page) {

  $enable_bootstrap = \Drupal::config('swaps.swapsettings_config')->get('enable_bootstrap');

  if (!\Drupal::currentUser()->hasPermission('access contextual links')) {
    return;
  }

  if ($enable_bootstrap == '1') {
    $page['#attached']['library'][] = 'visual_content_layout/bootstrap';
  }

}

/**
 * Implements hook_element_info_alter().
 */
function visual_content_layout_element_info_alter(&$types) {

  $types['text_format']['#pre_render'][] = 'visual_content_layout_pre_render_text_format';

}

/**
 * Set the necessary divs to work with visual help.
 */
function visual_content_layout_pre_render_text_format($element) {
  if (!isset($element['#format'])) {
    return $element;
  }

  if (isset($element['value'])) {
    if (!isset($element['format'])) {
      return $element;
    }
    if (isset($element['summary']) && $element['summary']['#type'] == 'textarea') {
      $element['summary'] = visual_content_layout_load_field($element['summary'], $element['format']['format']);
    }
    if (isset($element['value']) && $element['value']['#type'] == 'textarea') {
      $element['value'] = visual_content_layout_load_field($element['value'], $element['format']['format']);
    }
  }

  return $element;
}

/**
 * Make the divs and other elements required for the visual help.
 */
function visual_content_layout_load_field($field, $format) {
  $textarea_id = $field['#id'];
  if (is_array($format)) {
    $format_arr = $format;
    $format = isset($format_arr['#value']) ? $format_arr['#value'] : $format_arr['#default_value'];
  }

  // Display the link that enable the visual element.
  $prefix = '<div class="visual-content-layout-button-wrap" style="display: none;">
             <a class="visual-content-layout-btn" data-state="disable" data-id="'
             . $textarea_id . '" data-format = "' . $format . '">';
  $prefix .= t('Loading...') . '</a></div>';

  // Attributes for the link that display the select swap form.
  $attributes = array(
    'attributes' => array(
      'class' => array('use-ajax', 'visual-content-layout-form-button'),
      'data-textarea' => array($textarea_id),
    ),
  );

  // Create the link that display the select swap form.
  $url = \Drupal\Core\Url::fromRoute('visual_content_layout.swap_select_form_all', [], $attributes);
  $link = \Drupal::l(t('<i class="fa fa-plus-square"></i>'), $url);
  // Create top and down link wrapper.
  $internal_link_top = '<div id="vcl-top-link" class="visual-content-layout-select-link">'
    . $link . '</div>';
  $internal_link_bottom = '<div id="vcl-bottom-link" class="visual-content-layout-select-link">'
    . $link . '</div>';
  // Create the area for the visual elements
  $visual_elements_area = '<div class="visual-content-layout-elements-area visual-content-layout-container"></div>';

  // Create the div that contain the visual help elements.
  $suffix = '<div class="visual-content-layout-visual-help">'
    . $internal_link_top . $visual_elements_area . $internal_link_bottom
    . '</div>';

  // Set all div and libraries.
  $field['#prefix'] = (isset($field['#prefix']) ? $field['#prefix'] : '') . $prefix;
  $field['#suffix'] = $suffix . (isset($field['#suffix']) ? $field['#suffix'] : '');
  $field['#attached']['library'][] = 'visual_content_layout/visual_content_layout';
  $field['#attached']['library'][] = 'core/drupal.vertical-tabs';

  // Create a list of all enables formats.
  $formats = filter_formats();
  $enable_formats = array();

  // Create a list of all formats that use filter_visualcontentlayout.
  foreach ($formats as $format) {
    $format_array = $format->toArray();
    if ($format_array['filters']['filter_visualcontentlayout']['status']) {
      $enable_formats[$format_array['format']] = TRUE;
    }
  }

  // Get all the swaps plugins.
  $manager = \Drupal::service('plugin.manager.swaps');
  $swaps = $manager->getDefinitions();
  $enable_swaps = array();
  $swaps_names = array();

  // Search the swap that have the name of the variable $name.
  foreach ($swaps as $swap) {
    $id = str_replace("swap_", "", $swap['id']);
    $enable_swaps[$id] = $swap['container'];
    $swaps_names[$id] = $swap['name'];
  }

  // Set the settings for send to javascript.
  $field['#attached']['drupalSettings']['visualContentLayout'] = array(
    'enable_formats' => $enable_formats,
    'enable_swaps' => $enable_swaps,
    'swap_names' => $swaps_names,
    'base_path' => $GLOBALS['base_path'],
  );
  return $field;
}
