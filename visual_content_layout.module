<?php

function visual_content_layout_page_attachments_alter(array &$page) {

  $enable_bootstrap = \Drupal::config('swaps.swapsettings_config')->get('enable_bootstrap');
  $enable_fontawesome = \Drupal::config('swaps.swapsettings_config')->get('enable_fontawesome');

  if (!\Drupal::currentUser()->hasPermission('access contextual links')) {
    return;
  }

  if($enable_bootstrap == '1'){
    $page['#attached']['library'][] = 'visual_content_layout/bootstrap';
  }

}

/**
 * Implementation of hook_element_info_alter().
 */
function visual_content_layout_element_info_alter(&$types) {

  $types['text_format']['#pre_render'][] = 'visual_content_layout_pre_render_text_format';

  $x = $types;
}

function visual_content_layout_pre_render_text_format($element) {
  if (!isset($element['#format'])) {
    return $element;
  }

  if (isset($element['value'])) {
    if (!isset($element['format'])) {
      return $element;
    }
    if (isset($element['summary']) && $element['summary']['#type'] == 'textarea') {
      $element['summary'] = visual_content_layout_load_field($element['summary'], $element['format']['format']);
    }
    if (isset($element['value']) && $element['value']['#type'] == 'textarea') {
      $element['value'] = visual_content_layout_load_field($element['value'], $element['format']['format']);
    }
  }

  return $element;
}

function visual_content_layout_load_field($field, $format) {

  $textarea_id = $field['#id'];

  if (is_array($format)) {
    $format_arr = $format;
    $format = isset($format_arr['#value']) ? $format_arr['#value'] : $format_arr['#default_value'];
  }

  $prefix = '<div class="visual-content-layout-button-wrap"><a class="visual-content-layout-btn  " data-state="disable" data-id="' . $textarea_id . '" data-format = "' . $format . '">';
  $prefix .=  t('Loading...') . '</a></div>';

  $attributes = array(
    'attributes' => array(
      'class' => array('use-ajax', 'visual-content-layout-form-button'),
      'data-textarea' => array($textarea_id),
    ),
  );
  // Let's create the link.
  $url = \Drupal\Core\Url::fromRoute('visual_content_layout.swap_select_form', [], $attributes);
  $internal_link = '<div class="visual-content-layout-visual-select-form">' . \Drupal::l(t('<i class="fa fa-plus-square"></i>'), $url) . '</div>';

  $suffix = '<div class="visual-content-layout-visual-help container">'.$internal_link.'</div>';
  $suffix .= '<div id="miarea">asdasdasdas</div>';

  $field['#prefix'] = (isset($field['#prefix']) ? $field['#prefix'] : '') . $prefix;
  $field['#suffix'] = $suffix . (isset($field['#suffix']) ? $field['#suffix'] : '') ;
  $field['#attached']['library'][] = 'visual_content_layout/visual_content_layout';

  $formats = filter_formats();
  $enableFormats = array();

  foreach($formats as $format) {
    $formatArray = $format->toArray();
    if($formatArray['filters']['filter_visualcontentlayout']['status']){
      $enableFormats[$formatArray['format']] =  TRUE;
    }
  }

  //get all the swaps plugins
  $manager = \Drupal::service('plugin.manager.swaps');
  $swaps = $manager->getDefinitions();
  $enableSwaps = array();
  $swapsNames = array();

  //search the swap that have the name of the variable $name
  foreach($swaps as $swap){
    $enableSwaps[$swap['id']] = $swap['container'];
    $swapsNames[$swap['id']] = $swap['name'];
  }

  $field['#attached']['drupalSettings']['visualContentLayout'] = array(
    'enable_formats' => $enableFormats,
    'enable_swaps' => $enableSwaps,
    'swap_names' => $swapsNames,
  );

  return $field;
}
